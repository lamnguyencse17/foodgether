name: Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  DB_NAME: ${{ secrets.DB_NAME }}
  PRIVATE_URL: ${{ secrets.PRIVATE_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}

on:
  push:
    branches:
      - main
jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'yarn'
      - run: yarn
      - name: Masking PRIVATE_URL value
        run: echo "::add-mask::$PRIVATE_URL"
      - name: Masking DB_NAME value
        run: echo "::add-mask::$DB_NAME"
      - run: yarn prisma migrate deploy
  deploy-production:
    runs-on: ubuntu-latest
    needs: ["migrate", "lint"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: 'yarn'
      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**/*.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - run: yarn
      - name: Masking PRIVATE_URL value
        run: echo "::add-mask::$PRIVATE_URL"
      - name: Masking DB_NAME value
        run: echo "::add-mask::$DB_NAME"
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}